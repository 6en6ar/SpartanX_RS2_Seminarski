// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpartanX.Database;

namespace SpartanX.Migrations
{
    [DbContext(typeof(SpartanXContext))]
    [Migration("20211107160638_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpartanX.Database.Dobavljaci", b =>
                {
                    b.Property<int>("DobavljacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DobavljacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fax")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("KontaktOsoba")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Napomena")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Web")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZiroRacuni")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DobavljacId");

                    b.ToTable("Dobavljaci");
                });

            modelBuilder.Entity("SpartanX.Database.Komentar", b =>
                {
                    b.Property<int>("KomentarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KomentarID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnType("int")
                        .HasColumnName("KupacID");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.HasKey("KomentarId");

                    b.HasIndex("KupacId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("SpartanX.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("SpartanX.Database.KorisnikUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikUlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("UlogaId")
                        .HasColumnType("int")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloge");
                });

            modelBuilder.Entity("SpartanX.Database.Kupci", b =>
                {
                    b.Property<int>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KupacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("KupacId");

                    b.ToTable("Kupci");
                });

            modelBuilder.Entity("SpartanX.Database.Nabavka", b =>
                {
                    b.Property<int>("NabavkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NabavkaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojNabavke")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DatumNabavke")
                        .HasColumnType("datetime");

                    b.Property<int>("DobavljacId")
                        .HasColumnType("int")
                        .HasColumnName("DobavljacID");

                    b.Property<decimal>("IznosRacuna")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Napomena")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Pdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SkladisteId")
                        .HasColumnType("int")
                        .HasColumnName("SkladisteID");

                    b.HasKey("NabavkaId");

                    b.HasIndex("DobavljacId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Nabavka");
                });

            modelBuilder.Entity("SpartanX.Database.NabavkaStavke", b =>
                {
                    b.Property<int>("NabavkaStavkeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NabavkaStavkeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("NabavkaId")
                        .HasColumnType("int")
                        .HasColumnName("NabavkaID");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.HasKey("NabavkaStavkeId");

                    b.HasIndex("NabavkaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("NabavkaStavke");
                });

            modelBuilder.Entity("SpartanX.Database.NarudzbaStavke", b =>
                {
                    b.Property<int>("NarudzbaStavkaId")
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaStavkaID");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID");

                    b.Property<decimal?>("Popust")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.HasKey("NarudzbaStavkaId");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("NarudzbaStavke");
                });

            modelBuilder.Entity("SpartanX.Database.Narudzbe", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojNarudzbe")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DatumNarudzbe")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IznosBezPdv")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("IznosSaPdv")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("KupacId")
                        .HasColumnType("int")
                        .HasColumnName("KupacID");

                    b.Property<bool?>("Otkazano")
                        .HasColumnType("bit");

                    b.Property<int>("SkladisteId")
                        .HasColumnType("int")
                        .HasColumnName("SkladisteID");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("NarudzbaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Narudzbe");
                });

            modelBuilder.Entity("SpartanX.Database.Proizvodi", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodoviLojalnosti")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProizvodjacId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodjacID");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("VrstaId")
                        .HasColumnType("int")
                        .HasColumnName("VrstaID");

                    b.HasKey("ProizvodId");

                    b.HasIndex("ProizvodjacId");

                    b.HasIndex("VrstaId");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("SpartanX.Database.Proizvodjaci", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProizvodjacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProizvodjacId")
                        .HasName("PK_proizvodjaci");

                    b.ToTable("Proizvodjaci");
                });

            modelBuilder.Entity("SpartanX.Database.Racun", b =>
                {
                    b.Property<string>("RacunId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("RacunID")
                        .IsFixedLength(true);

                    b.Property<string>("BrojRacuna")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DatumRacuna")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("KupacId")
                        .HasColumnType("int")
                        .HasColumnName("KupacID");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID");

                    b.Property<bool>("Poslano")
                        .HasColumnType("bit");

                    b.Property<bool>("Zakljucen")
                        .HasColumnType("bit");

                    b.HasKey("RacunId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("KupacId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("SpartanX.Database.Skladistum", b =>
                {
                    b.Property<int>("SkladisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SkladisteID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("SkladisteId");

                    b.ToTable("Skladista");
                });

            modelBuilder.Entity("SpartanX.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("SpartanX.Database.VrstaProizvodum", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VrstaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VrstaId");

                    b.ToTable("VrstaProizvoda");
                });

            modelBuilder.Entity("SpartanX.Database.Komentar", b =>
                {
                    b.HasOne("SpartanX.Database.Kupci", "Kupac")
                        .WithMany("Komentars")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Komentar_Kupci")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Proizvodi", "Proizvod")
                        .WithMany("Komentars")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK_Proizvod_Komentar")
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("SpartanX.Database.KorisnikUloge", b =>
                {
                    b.HasOne("SpartanX.Database.Korisnici", "Korisnik")
                        .WithMany("KorisnikUloges")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Uloge_Korisnici");

                    b.HasOne("SpartanX.Database.Uloge", "Uloga")
                        .WithMany("KorisnikUloges")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisnikUloge_Uloge");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("SpartanX.Database.Nabavka", b =>
                {
                    b.HasOne("SpartanX.Database.Dobavljaci", "Dobavljac")
                        .WithMany("Nabavkas")
                        .HasForeignKey("DobavljacId")
                        .HasConstraintName("FK_Nabavka_Dobavljaci")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Korisnici", "Korisnik")
                        .WithMany("Nabavkas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Nabavka_Korisnik")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Skladistum", "Skladiste")
                        .WithMany("Nabavkas")
                        .HasForeignKey("SkladisteId")
                        .HasConstraintName("FK_Nabavka_Skladiste")
                        .IsRequired();

                    b.Navigation("Dobavljac");

                    b.Navigation("Korisnik");

                    b.Navigation("Skladiste");
                });

            modelBuilder.Entity("SpartanX.Database.NabavkaStavke", b =>
                {
                    b.HasOne("SpartanX.Database.Nabavka", "Nabavka")
                        .WithMany("NabavkaStavkes")
                        .HasForeignKey("NabavkaId")
                        .HasConstraintName("FK_NabavkaStavke_Nabavka")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Proizvodi", "Proizvod")
                        .WithMany("NabavkaStavkes")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK_NabavkaStavke_Proizvod")
                        .IsRequired();

                    b.Navigation("Nabavka");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("SpartanX.Database.NarudzbaStavke", b =>
                {
                    b.HasOne("SpartanX.Database.Narudzbe", "Narudzba")
                        .WithMany("NarudzbaStavkes")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK_Narudzba_NarudzbaStavke")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Proizvodi", "Proizvod")
                        .WithMany("NarudzbaStavkes")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK_Proizvod_NarudzbaStavke")
                        .IsRequired();

                    b.Navigation("Narudzba");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("SpartanX.Database.Narudzbe", b =>
                {
                    b.HasOne("SpartanX.Database.Kupci", "Kupac")
                        .WithMany("Narudzbes")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Narudzbe_Kupac")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Skladistum", "Skladiste")
                        .WithMany("Narudzbes")
                        .HasForeignKey("SkladisteId")
                        .HasConstraintName("FK_Narudzbe_Skladista")
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("Skladiste");
                });

            modelBuilder.Entity("SpartanX.Database.Proizvodi", b =>
                {
                    b.HasOne("SpartanX.Database.Proizvodjaci", "Proizvodjac")
                        .WithMany("Proizvodis")
                        .HasForeignKey("ProizvodjacId")
                        .HasConstraintName("FK_Proizvodi_Proizvodjac")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.VrstaProizvodum", "Vrsta")
                        .WithMany("Proizvodis")
                        .HasForeignKey("VrstaId")
                        .HasConstraintName("FK_Proizvodi_VrstaProizvoda")
                        .IsRequired();

                    b.Navigation("Proizvodjac");

                    b.Navigation("Vrsta");
                });

            modelBuilder.Entity("SpartanX.Database.Racun", b =>
                {
                    b.HasOne("SpartanX.Database.Korisnici", "Korisnik")
                        .WithMany("Racuns")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Racun_Korisnik")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Kupci", "Kupac")
                        .WithMany("Racuns")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Racun_Kupac")
                        .IsRequired();

                    b.HasOne("SpartanX.Database.Narudzbe", "Narudzba")
                        .WithMany("Racuns")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK_Racun_Narudzba")
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Kupac");

                    b.Navigation("Narudzba");
                });

            modelBuilder.Entity("SpartanX.Database.Dobavljaci", b =>
                {
                    b.Navigation("Nabavkas");
                });

            modelBuilder.Entity("SpartanX.Database.Korisnici", b =>
                {
                    b.Navigation("KorisnikUloges");

                    b.Navigation("Nabavkas");

                    b.Navigation("Racuns");
                });

            modelBuilder.Entity("SpartanX.Database.Kupci", b =>
                {
                    b.Navigation("Komentars");

                    b.Navigation("Narudzbes");

                    b.Navigation("Racuns");
                });

            modelBuilder.Entity("SpartanX.Database.Nabavka", b =>
                {
                    b.Navigation("NabavkaStavkes");
                });

            modelBuilder.Entity("SpartanX.Database.Narudzbe", b =>
                {
                    b.Navigation("NarudzbaStavkes");

                    b.Navigation("Racuns");
                });

            modelBuilder.Entity("SpartanX.Database.Proizvodi", b =>
                {
                    b.Navigation("Komentars");

                    b.Navigation("NabavkaStavkes");

                    b.Navigation("NarudzbaStavkes");
                });

            modelBuilder.Entity("SpartanX.Database.Proizvodjaci", b =>
                {
                    b.Navigation("Proizvodis");
                });

            modelBuilder.Entity("SpartanX.Database.Skladistum", b =>
                {
                    b.Navigation("Nabavkas");

                    b.Navigation("Narudzbes");
                });

            modelBuilder.Entity("SpartanX.Database.Uloge", b =>
                {
                    b.Navigation("KorisnikUloges");
                });

            modelBuilder.Entity("SpartanX.Database.VrstaProizvodum", b =>
                {
                    b.Navigation("Proizvodis");
                });
#pragma warning restore 612, 618
        }
    }
}
